

//--------------------------------------------------------------------------------------------------
// determines whether the given property is a compact style property
//--------------------------------------------------------------------------------------------------
@function extjs-is-compact-style-property($property) {
    $compact-property-names: padding margin border-width border-style border-color border-radius;

    @return index($compact-property-names, $property) != null;
}


//--------------------------------------------------------------------------------------------------
// indicates whether the given property supports direction related values
//--------------------------------------------------------------------------------------------------
@function extjs-is-direction-value-supporting-property($property) {
    $direction-related-property-names: float text-align clear;

    @return index($direction-related-property-names, $property) != null;
}


//--------------------------------------------------------------------------------------------------
// determines whether the given value is a fully compact value (top right bottom left)
//--------------------------------------------------------------------------------------------------
@function extjs-is-compact-style-value($value) {
    @return type-of($value) == list and length($value) == 4;
}


//--------------------------------------------------------------------------------------------------
// returns true when the given property contains 'left'
//--------------------------------------------------------------------------------------------------
@function extjs-is-left-property($property) {
    @return str-index($property, left) != null;
}


//--------------------------------------------------------------------------------------------------
// returns true when the given property contains 'right'
//--------------------------------------------------------------------------------------------------
@function extjs-is-right-property($property) {
    @return str-index($property, right) != null;
}


//--------------------------------------------------------------------------------------------------
// returns true when the given property contains 'top'
//--------------------------------------------------------------------------------------------------
@function extjs-is-top-property($property) {
    @return str-index($property, top) != null;
}


//--------------------------------------------------------------------------------------------------
// returns true when the given property contains 'bottom'
//--------------------------------------------------------------------------------------------------
@function extjs-is-bottom-property($property) {
    @return str-index($property, bottom) != null;
}


//--------------------------------------------------------------------------------------------------
// expects $source to be either 'left' or 'right' and returns the other value
//--------------------------------------------------------------------------------------------------
@function extjs-invert-direction($source) {
    @return if($source == left, right, left);
}


//--------------------------------------------------------------------------------------------------
// indicates whether the given value is either 'left' or 'right'
//--------------------------------------------------------------------------------------------------
@function extjs-is-direction-value($value) {
    @return index(left right, $value);
}


//--------------------------------------------------------------------------------------------------
// extracts the direction (left, right) from the given property
//--------------------------------------------------------------------------------------------------
@function extjs-extract-direction($property) {
    $direction: null;

    @if extjs-is-left-property($property) {
        $direction: left;
    }
    @else if extjs-is-right-property($property) {
        $direction: right;
    }

    @return $direction;
}


//--------------------------------------------------------------------------------------------------
// extracts the side (top, bottom) from the given property
//--------------------------------------------------------------------------------------------------
@function extjs-extract-side($property) {
    $direction: null;

    @if extjs-is-top-property($property) {
        $direction: top;
    }
    @else if extjs-is-bottom-property($property) {
        $direction: bottom;
    }

    @return $direction;
}


//--------------------------------------------------------------------------------------------------
// returns the opposite direction property name for the given property
//--------------------------------------------------------------------------------------------------
@function extjs-invert-property($property) {
    $result: $property;

    @if extjs-is-left-property($property) {
        $result: extjs-str-replace-all($property, left, right);
    }
    @else if extjs-is-right-property($property) {
        $result: extjs-str-replace-all($property, right, left);
    }

    @return $result;
}


//--------------------------------------------------------------------------------------------------
// swaps left and right values of a compact style (top, right, bottom, left)
//--------------------------------------------------------------------------------------------------
@function extjs-swap-direction-values($property, $value) {
    $result: $value;

    @if extjs-is-direction-value-supporting-property($property) and extjs-is-direction-value($value) {
        $result: if($value == left, right, left);
    }
    @else if extjs-is-compact-style-value($value) {
        // top right bottom left ==> top left bottom right
        $result: (
                nth($value, 1) nth($value, 4)
                nth($value, 3) nth($value, 2)
        );
    }

    @return $result;
}


//--------------------------------------------------------------------------------------------------
// provides a map with ltr and rtl property information built from the given style information
//--------------------------------------------------------------------------------------------------
@function extjs-calculate-bidi-style($property, $value, $inverse-value: null) {
    @if $inverse-value == null {
        $inverse-value: extjs-swap-direction-values($property, $value);
    }

    $ltr: (property: $property, value: $value);
    $rtl: (property: extjs-invert-property($property), value: $inverse-value);

    @return (ltr: $ltr, rtl: $rtl);
}