
//--------------------------------------------------------------------------------------------------
// utility
//--------------------------------------------------------------------------------------------------

// 'extjs-apply-*' mixins wrap styles into direction aware selector
// 'extjs-write-*' mixins write styles only without wrapping



//--------------------------------------------------------------------------------------------------
// Simply write a single style and its value
//--------------------------------------------------------------------------------------------------
@mixin extjs-write-style($property, $value) {
    #{$property}: #{$value};
}



//--------------------------------------------------------------------------------------------------
// Writes a single style in a direction aware fashion
//--------------------------------------------------------------------------------------------------
@mixin extjs-write-bidi-style($property, $value, $direction) {
    $bidi-style: extjs-calculate-bidi-style($property, $value);
    $style: map-get($bidi-style, $direction);

    @include extjs-write-style(map-get($style, property), map-get($style, value));
}



//--------------------------------------------------------------------------------------------------
// Batch processing variant of the extjs-write-bidi-style mixin
//--------------------------------------------------------------------------------------------------
@mixin extjs-write-bidi-styles($styles, $direction) {
    @each $property, $value in $styles {
        @include extjs-write-bidi-style($property, $value, $direction);
    }
}



//--------------------------------------------------------------------------------------------------
// Generates wrapping selectors for ltr and rtl styles and write the given styles into the
// selectors. In case the $include-rtl variable is not set or false, then no direction aware
// selectors are generated.
//--------------------------------------------------------------------------------------------------
@mixin extjs-apply($sub-selector, $property, $value) {
    $bidi-style: extjs-calculate-bidi-style($property, $value);

    $ltr: map-get($bidi-style, ltr);
    $rtl: map-get($bidi-style, rtl);

    @if extjs-include-rtl() {
        &:not(.#{$prefix}rtl) #{$sub-selector}{
            @include extjs-write-style(map-get($ltr, property), map-get($ltr, value));
        }

        &.#{$prefix}rtl #{$sub-selector} {
            @include extjs-write-style(map-get($rtl, property), map-get($rtl, value));
        }
    }
    @else {
        @include extjs-write-style(map-get($ltr, property), map-get($ltr, value));
    }
}



//--------------------------------------------------------------------------------------------------
// Generates wrapping selectors for ltr and rtl styles and write the given styles map into the
// selectors. In case the $include-rtl variable is not set or false, then no direction aware
// selectors are generated.
//--------------------------------------------------------------------------------------------------
@mixin extjs-apply-styles($sub-selector, $styles) {
    @if extjs-include-rtl() {
        &:not(.#{$prefix}rtl) #{$sub-selector} {
            @include extjs-write-bidi-styles($styles, ltr);
        }

        &.#{$prefix}rtl #{$sub-selector} {
            @include extjs-write-bidi-styles($styles, rtl);
        }
    }
    @else {
        @include extjs-write-bidi-styles($styles, ltr);
    }
}



//--------------------------------------------------------------------------------------------------
// Wraps the given style into direction aware selectors
//--------------------------------------------------------------------------------------------------
@mixin extjs-apply-style($property, $value, $sub-selector: "") {
    @include extjs-apply($sub-selector, $property, $value);
}




//--------------------------------
// Public API
//--------------------------------


//--------------------------------------------------------------------------------------------------
// Bidirectional style mapping mixin (public API)
//--------------------------------------------------------------------------------------------------
@mixin extjs-bidi($styles, $sub-selector: "") {
    @include extjs-apply-styles($sub-selector, $styles);
}



//--------------------------------------------------------------------------------------------------
// padding
//--------------------------------------------------------------------------------------------------

@mixin padding($value, $sub-selector: "") {
    @include extjs-apply-style(padding, $value, $sub-selector);
}

@mixin padding-left($value, $sub-selector: "") {
    @include extjs-apply-style(padding-left, $value, $sub-selector);
}

@mixin padding-right($value, $sub-selector: "") {
    @include extjs-apply-style(padding-right, $value, $sub-selector);
}



//--------------------------------------------------------------------------------------------------
// margin
//--------------------------------------------------------------------------------------------------

@mixin margin($value, $sub-selector: "") {
    @include extjs-apply-style(margin, $value, $sub-selector);
}

@mixin margin-left($value, $sub-selector: "") {
    @include extjs-apply-style(margin-left, $value, $sub-selector);
}

@mixin margin-right($value, $sub-selector: "") {
    @include extjs-apply-style(margin-right, $value, $sub-selector);
}



//--------------------------------------------------------------------------------------------------
// border-width
//--------------------------------------------------------------------------------------------------

@mixin border-width($value, $sub-selector: "") {
    @include extjs-apply-style(border-width, $value, $sub-selector);
}

@mixin border-left-width($value, $sub-selector: "") {
    @include extjs-apply-style(border-left-width, $value, $sub-selector);
}

@mixin border-right-width($value, $sub-selector: "") {
    @include extjs-apply-style(border-right-width, $value, $sub-selector);
}



//--------------------------------------------------------------------------------------------------
// border-style
//--------------------------------------------------------------------------------------------------

@mixin border-style($value, $sub-selector: "") {
    @include extjs-apply-style(border-style, $value, $sub-selector);
}

@mixin border-left-style($value, $sub-selector: "") {
    @include extjs-apply-style(border-left-style, $value, $sub-selector);
}

@mixin border-right-style($value, $sub-selector: "") {
    @include extjs-apply-style(border-right-style, $value, $sub-selector);
}



//--------------------------------------------------------------------------------------------------
// border-color
//--------------------------------------------------------------------------------------------------

@mixin border-color($value, $sub-selector: "") {
    @include extjs-apply-style(border-color, $value, $sub-selector);
}

@mixin border-left-color($value, $sub-selector: "") {
    @include extjs-apply-style(border-left-color, $value, $sub-selector);
}

@mixin border-right-color($value, $sub-selector: "") {
    @include extjs-apply-style(border-right-color, $value, $sub-selector);
}



//--------------------------------------------------------------------------------------------------
// border (generic)
//--------------------------------------------------------------------------------------------------

@mixin border-left($value, $sub-selector: "") {
    @include extjs-apply-style(border-left, $value, $sub-selector);
}

@mixin border-right($value, $sub-selector: "") {
    @include extjs-apply-style(border-right, $value, $sub-selector);
}